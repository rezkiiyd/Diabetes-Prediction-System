# -*- coding: utf-8 -*-
"""[Virtual Internship] Diabetes Patients - Data Analytics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D21j-Nx52hhwYnJanwYMEBxCUdeJ3sj0

# Import Required Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""**Pandas**: Data analysis and manipulation library for working with structured data using Data Frame and Series.

**NumPy**: Numerical computing library supporting large, multi-dimensional arrays and matrices, with high-level mathematical functions.

**Seaborn**: Statistical data visualization library for creating attractive and informative graphics, based on Matplotlib.

**Matplotlib**: Comprehensive plotting library providing interface for creating various plots like line, scatter, bar, and histograms.
"""

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""**Train Test Split**: Technique for splitting data into training and testing sets to assess model performance.

**Logistic Regression**: Method for predicting the probability of a binary outcome using the logistic function.

**Accuracy**: Metric measuring the proportion of correctly classified instances in a classification model.

**Sklearn**: Python's Scikit-learn, a powerful machine learning library providing tools for data analysis and model building.

# Load The Dataset
"""

data = pd.read_csv('/content/diabetes.csv')
data

"""This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether a patient has diabetes based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.

# Check fro Missing Values
"""

sns.heatmap(data.isnull())

"""# Correlation Matrix"""

correlation = data.corr()
print(correlation)
plt.figure(figsize=(10, 8))
sns.heatmap(correlation, annot=True, cmap='coolwarm')
plt.show

"""# Train Test Split"""

X = data.drop("Outcome", axis = 1)
Y = data['Outcome']
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2)

"""In X all the independent variables are stored
In Y the predictor variable ("OUTCOME") is stored
Train-test split is a technique used in machine learning to assess model performance. It divides the dataset into a training set and a testing set, with a 0.2 test size indicating that 20% of the data is used for testing and 80% for training

# Train the Model
"""

model = LogisticRegression()
model.fit(X_train, Y_train)

"""Fitting the X train and Y train data into the variable called model

# Making Prediction
"""

prediction = model.predict(X_test)
print(prediction)

"""After training the model, predictions are made using the test data, which comprises 20% of the total dataset"""

accuracy = accuracy_score(prediction, Y_test)
print(accuracy)

"""The accuracy of the model is then calculated and determined"""
